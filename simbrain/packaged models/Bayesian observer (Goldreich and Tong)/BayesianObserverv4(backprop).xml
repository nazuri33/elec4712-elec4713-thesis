<org.simbrain.network.core.Network>
  <neuronList/>
  <synapseList class="linked-hash-set">
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source>
        <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
          <inputType>WEIGHTED</inputType>
          <increment>1.0</increment>
          <threshold>0.0</threshold>
          <ceiling>1.0</ceiling>
          <floor>0.0</floor>
          <bias>0.0</bias>
        </updateRule>
        <id>Neuron_268</id>
        <label></label>
        <activation>0.0</activation>
        <spike>false</spike>
        <buffer>0.0</buffer>
        <spkBuffer>false</spkBuffer>
        <inputValue>0.0</inputValue>
        <parent reference="../../../.."/>
        <x>-322.6156975167226</x>
        <y>-20.800141419754155</y>
        <z>0.0</z>
        <clamped>false</clamped>
        <polarity>BOTH</polarity>
        <targetValue>0.0</targetValue>
        <parentGroup class="org.simbrain.network.groups.NeuronGroup">
          <parentNetwork reference="../../../../.."/>
          <id>Group_10</id>
          <label>Stimulus input</label>
          <stateInfo></stateInfo>
          <markedForDeletion>false</markedForDeletion>
          <updateRule>Linear</updateRule>
          <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
          <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
            <java.util.concurrent.CopyOnWriteArrayList>
              <default/>
              <int>10</int>
              <org.simbrain.network.core.Neuron reference="../../../.."/>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <threshold>0.0</threshold>
                  <ceiling>1.0</ceiling>
                  <floor>0.0</floor>
                  <bias>0.0</bias>
                </updateRule>
                <id>Neuron_269</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>-282.6156975167228</x>
                <y>-20.800141419754155</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <threshold>0.0</threshold>
                  <ceiling>1.0</ceiling>
                  <floor>0.0</floor>
                  <bias>0.0</bias>
                </updateRule>
                <id>Neuron_270</id>
                <label></label>
                <activation>1.0</activation>
                <spike>false</spike>
                <buffer>1.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>-242.6156975167229</x>
                <y>-20.800141419754155</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <threshold>0.0</threshold>
                  <ceiling>1.0</ceiling>
                  <floor>0.0</floor>
                  <bias>0.0</bias>
                </updateRule>
                <id>Neuron_271</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>-202.61569751672286</x>
                <y>-20.800141419754155</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <threshold>0.0</threshold>
                  <ceiling>1.0</ceiling>
                  <floor>0.0</floor>
                  <bias>0.0</bias>
                </updateRule>
                <id>Neuron_272</id>
                <label></label>
                <activation>1.0</activation>
                <spike>false</spike>
                <buffer>1.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>-162.61569751672312</x>
                <y>-20.800141419754155</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <threshold>0.0</threshold>
                  <ceiling>1.0</ceiling>
                  <floor>0.0</floor>
                  <bias>0.0</bias>
                </updateRule>
                <id>Neuron_273</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>-122.61569751672324</x>
                <y>-20.800141419754155</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <threshold>0.0</threshold>
                  <ceiling>1.0</ceiling>
                  <floor>0.0</floor>
                  <bias>0.0</bias>
                </updateRule>
                <id>Neuron_274</id>
                <label></label>
                <activation>1.0</activation>
                <spike>false</spike>
                <buffer>1.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>-82.61569751672359</x>
                <y>-20.800141419754155</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <threshold>0.0</threshold>
                  <ceiling>1.0</ceiling>
                  <floor>0.0</floor>
                  <bias>0.0</bias>
                </updateRule>
                <id>Neuron_275</id>
                <label></label>
                <activation>1.0</activation>
                <spike>false</spike>
                <buffer>1.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>-42.61569751672409</x>
                <y>-20.800141419754155</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <threshold>0.0</threshold>
                  <ceiling>1.0</ceiling>
                  <floor>0.0</floor>
                  <bias>0.0</bias>
                </updateRule>
                <id>Neuron_276</id>
                <label></label>
                <activation>1.0</activation>
                <spike>false</spike>
                <buffer>1.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>-3.6331545805007197</x>
                <y>-20.800141419754155</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <threshold>0.0</threshold>
                  <ceiling>1.0</ceiling>
                  <floor>0.0</floor>
                  <bias>0.0</bias>
                </updateRule>
                <id>Neuron_277</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>37.38430248327597</x>
                <y>-20.800141419754155</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
            </java.util.concurrent.CopyOnWriteArrayList>
          </neuronList>
          <layout class="org.simbrain.network.layouts.LineLayout">
            <orientation>HORIZONTAL</orientation>
            <spacing>40.0</spacing>
            <initialX>444.27030264999456</initialX>
            <initialY>65.5842457011144</initialY>
          </layout>
          <incomingSgs/>
          <outgoingSgs/>
          <gridThreshold>10</gridThreshold>
          <betweenNeuronInterval>50</betweenNeuronInterval>
          <recordAsSpikes>false</recordAsSpikes>
          <recording>false</recording>
          <inputMode>false</inputMode>
          <inputIndex>0</inputIndex>
          <writeCounter>0</writeCounter>
          <subsamplingIndices>
            <int>14</int>
            <int>13</int>
            <int>18</int>
            <int>15</int>
            <int>2</int>
            <int>23</int>
            <int>11</int>
            <int>9</int>
            <int>6</int>
            <int>10</int>
            <int>3</int>
            <int>5</int>
            <int>7</int>
            <int>1</int>
            <int>24</int>
            <int>8</int>
            <int>22</int>
            <int>17</int>
            <int>20</int>
            <int>0</int>
            <int>4</int>
            <int>21</int>
            <int>19</int>
            <int>16</int>
            <int>12</int>
          </subsamplingIndices>
          <fileNum>0</fileNum>
        </parentGroup>
        <updatePriority>0</updatePriority>
        <auxValue>0.0</auxValue>
      </source>
      <target>
        <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
          <inputType>WEIGHTED</inputType>
          <increment>0.2</increment>
          <slope>1.0</slope>
          <bias>-1.0</bias>
          <noiseGenerator>
            <pdf>UNIFORM</pdf>
            <param1>0.0</param1>
            <param2>1.0</param2>
            <upperBound>1.0</upperBound>
            <lowerBound>0.0</lowerBound>
            <clipping>false</clipping>
          </noiseGenerator>
          <addNoise>false</addNoise>
          <clipping>true</clipping>
          <upperBound>1.0</upperBound>
          <lowerBound>-1.0</lowerBound>
        </updateRule>
        <id>Neuron_395</id>
        <label>Number of stimulus</label>
        <activation>0.0</activation>
        <spike>false</spike>
        <buffer>0.0</buffer>
        <spkBuffer>false</spkBuffer>
        <inputValue>0.0</inputValue>
        <parent reference="../../../.."/>
        <x>262.82283339842775</x>
        <y>-329.52296857342054</y>
        <z>0.0</z>
        <clamped>false</clamped>
        <polarity>BOTH</polarity>
        <targetValue>0.0</targetValue>
        <parentGroup class="org.simbrain.network.groups.NeuronGroup">
          <parentNetwork reference="../../../../.."/>
          <id>Group_17</id>
          <label>Layer 1</label>
          <stateInfo></stateInfo>
          <markedForDeletion>false</markedForDeletion>
          <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork">
            <parentNetwork reference="../../../../../.."/>
            <id>Group_16</id>
            <label>Backprop</label>
            <stateInfo></stateInfo>
            <markedForDeletion>false</markedForDeletion>
            <neuronGroupList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
              <java.util.concurrent.CopyOnWriteArrayList>
                <default/>
                <int>3</int>
                <org.simbrain.network.groups.NeuronGroup reference="../../../.."/>
                <org.simbrain.network.groups.NeuronGroup>
                  <parentNetwork reference="../../../../../../../../.."/>
                  <id>Group_18</id>
                  <label>Layer 2</label>
                  <stateInfo></stateInfo>
                  <markedForDeletion>false</markedForDeletion>
                  <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../.."/>
                  <updateRule>Sigmoidal (Discrete)</updateRule>
                  <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
                  <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
                    <java.util.concurrent.CopyOnWriteArrayList>
                      <default/>
                      <int>8</int>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.0</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_401</id>
                        <label></label>
                        <activation>0.460178541195655</activation>
                        <spike>false</spike>
                        <buffer>0.460178541195655</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>212.82283339842775</x>
                        <y>-529.5229685734205</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.0</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_402</id>
                        <label></label>
                        <activation>0.460178541195655</activation>
                        <spike>false</spike>
                        <buffer>0.460178541195655</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>262.82283339842775</x>
                        <y>-529.5229685734205</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.0</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_403</id>
                        <label></label>
                        <activation>0.460178541195655</activation>
                        <spike>false</spike>
                        <buffer>0.460178541195655</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>312.82283339842775</x>
                        <y>-529.5229685734205</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.0</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_404</id>
                        <label></label>
                        <activation>0.460178541195655</activation>
                        <spike>false</spike>
                        <buffer>0.460178541195655</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>362.82283339842775</x>
                        <y>-529.5229685734205</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.0</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_405</id>
                        <label></label>
                        <activation>0.460178541195655</activation>
                        <spike>false</spike>
                        <buffer>0.460178541195655</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>412.82283339842775</x>
                        <y>-529.5229685734205</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.0</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_406</id>
                        <label></label>
                        <activation>0.460178541195655</activation>
                        <spike>false</spike>
                        <buffer>0.460178541195655</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>462.82283339842775</x>
                        <y>-529.5229685734205</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.0</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_407</id>
                        <label></label>
                        <activation>0.460178541195655</activation>
                        <spike>false</spike>
                        <buffer>0.460178541195655</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>512.8228333984277</x>
                        <y>-529.5229685734205</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.0</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_408</id>
                        <label></label>
                        <activation>0.460178541195655</activation>
                        <spike>false</spike>
                        <buffer>0.460178541195655</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>562.8228333984277</x>
                        <y>-529.5229685734205</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                    </java.util.concurrent.CopyOnWriteArrayList>
                  </neuronList>
                  <layout class="org.simbrain.network.layouts.LineLayout">
                    <orientation>HORIZONTAL</orientation>
                    <spacing>50.0</spacing>
                    <initialX>0.0</initialX>
                    <initialY>0.0</initialY>
                  </layout>
                  <incomingSgs>
                    <org.simbrain.network.groups.SynapseGroup>
                      <parentNetwork reference="../../../../../../../../../../.."/>
                      <id>Group_20</id>
                      <label>1 → 2</label>
                      <stateInfo></stateInfo>
                      <markedForDeletion>false</markedForDeletion>
                      <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../.."/>
                      <sourceNeuronGroup reference="../../../../../../.."/>
                      <targetNeuronGroup reference="../../.."/>
                      <connectionManager class="org.simbrain.network.connections.AllToAll">
                        <selfConnectionAllowed>false</selfConnectionAllowed>
                      </connectionManager>
                      <excitatoryRatio>1.0</excitatoryRatio>
                      <excitatoryPrototype>
                        <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                          <clipped>false</clipped>
                        </learningRule>
                        <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay">
                          <value>0.0</value>
                          <jumpHeight>1.0</jumpHeight>
                          <baseLine>0.0</baseLine>
                          <timeConstant>3.0</timeConstant>
                        </spikeResponder>
                        <id></id>
                        <strength>0.0</strength>
                        <psr>0.0</psr>
                        <increment>1.0</increment>
                        <upperBound>10.0</upperBound>
                        <lowerBound>-10.0</lowerBound>
                        <delay>0</delay>
                        <enabled>true</enabled>
                        <frozen>false</frozen>
                        <dlyPtr>0</dlyPtr>
                        <dlyVal>0.0</dlyVal>
                        <isTemplate>true</isTemplate>
                      </excitatoryPrototype>
                      <inhibitoryPrototype>
                        <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                          <clipped>false</clipped>
                        </learningRule>
                        <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay">
                          <value>0.0</value>
                          <jumpHeight>1.0</jumpHeight>
                          <baseLine>0.0</baseLine>
                          <timeConstant>3.0</timeConstant>
                        </spikeResponder>
                        <id></id>
                        <strength>0.0</strength>
                        <psr>0.0</psr>
                        <increment>1.0</increment>
                        <upperBound>10.0</upperBound>
                        <lowerBound>-10.0</lowerBound>
                        <delay>0</delay>
                        <enabled>true</enabled>
                        <frozen>false</frozen>
                        <dlyPtr>0</dlyPtr>
                        <dlyVal>0.0</dlyVal>
                        <isTemplate>true</isTemplate>
                      </inhibitoryPrototype>
                      <displaySynapses>true</displaySynapses>
                      <recurrent>false</recurrent>
                      <inStatic>true</inStatic>
                      <exStatic>true</exStatic>
                      <useGroupLevelSettings>true</useGroupLevelSettings>
                      <compressedMatrixRep>AAAAKAABAgMEBQYH/////wABAgMEBQYH/////wABAgMEBQYH/////wABAgMEBQYH/////wABAgME
BQYHP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+A
AAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AA
AD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAA==</compressedMatrixRep>
                      <useFullRepOnSave>false</useFullRepOnSave>
                    </org.simbrain.network.groups.SynapseGroup>
                  </incomingSgs>
                  <outgoingSgs>
                    <org.simbrain.network.groups.SynapseGroup>
                      <parentNetwork reference="../../../../../../../../../../.."/>
                      <id>Group_21</id>
                      <label>2 → 3</label>
                      <stateInfo></stateInfo>
                      <markedForDeletion>false</markedForDeletion>
                      <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../.."/>
                      <sourceNeuronGroup reference="../../.."/>
                      <targetNeuronGroup>
                        <parentNetwork reference="../../../../../../../../../../../.."/>
                        <id>Group_19</id>
                        <label>Mean distance between perceived taps </label>
                        <stateInfo></stateInfo>
                        <markedForDeletion>false</markedForDeletion>
                        <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../../.."/>
                        <updateRule>Sigmoidal (Discrete)</updateRule>
                        <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
                        <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
                          <java.util.concurrent.CopyOnWriteArrayList>
                            <default/>
                            <int>10</int>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_409</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>229.93172607200705</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_410</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>269.93172607200705</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_411</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>309.93172607200705</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_412</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>349.93172607200705</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_413</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>389.93172607200705</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_414</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>429.931726072007</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_415</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>469.93172607200705</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_416</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>509.931726072007</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_417</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>549.9317260720069</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_418</id>
                              <label></label>
                              <activation>0.9754318241703872</activation>
                              <spike>false</spike>
                              <buffer>0.9754318241703872</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>589.9317260720069</x>
                              <y>-862.8255352967124</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                          </java.util.concurrent.CopyOnWriteArrayList>
                        </neuronList>
                        <layout class="org.simbrain.network.layouts.LineLayout">
                          <orientation>HORIZONTAL</orientation>
                          <spacing>40.0</spacing>
                          <initialX>337.82283339842775</initialX>
                          <initialY>-879.5229685734205</initialY>
                        </layout>
                        <incomingSgs>
                          <org.simbrain.network.groups.SynapseGroup reference="../../.."/>
                        </incomingSgs>
                        <outgoingSgs/>
                        <gridThreshold>10</gridThreshold>
                        <betweenNeuronInterval>50</betweenNeuronInterval>
                        <recordAsSpikes>false</recordAsSpikes>
                        <recording>false</recording>
                        <inputMode>false</inputMode>
                        <inputIndex>0</inputIndex>
                        <writeCounter>0</writeCounter>
                        <subsamplingIndices>
                          <int>7</int>
                          <int>9</int>
                          <int>0</int>
                          <int>8</int>
                          <int>4</int>
                          <int>1</int>
                          <int>5</int>
                          <int>2</int>
                          <int>3</int>
                          <int>6</int>
                        </subsamplingIndices>
                        <fileNum>0</fileNum>
                      </targetNeuronGroup>
                      <connectionManager class="org.simbrain.network.connections.AllToAll">
                        <selfConnectionAllowed>false</selfConnectionAllowed>
                      </connectionManager>
                      <excitatoryRatio>1.0</excitatoryRatio>
                      <excitatoryPrototype>
                        <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                          <clipped>false</clipped>
                        </learningRule>
                        <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay">
                          <value>0.0</value>
                          <jumpHeight>1.0</jumpHeight>
                          <baseLine>0.0</baseLine>
                          <timeConstant>3.0</timeConstant>
                        </spikeResponder>
                        <id></id>
                        <strength>0.0</strength>
                        <psr>0.0</psr>
                        <increment>1.0</increment>
                        <upperBound>10.0</upperBound>
                        <lowerBound>-10.0</lowerBound>
                        <delay>0</delay>
                        <enabled>true</enabled>
                        <frozen>false</frozen>
                        <dlyPtr>0</dlyPtr>
                        <dlyVal>0.0</dlyVal>
                        <isTemplate>true</isTemplate>
                      </excitatoryPrototype>
                      <inhibitoryPrototype>
                        <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                          <clipped>false</clipped>
                        </learningRule>
                        <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay">
                          <value>0.0</value>
                          <jumpHeight>1.0</jumpHeight>
                          <baseLine>0.0</baseLine>
                          <timeConstant>3.0</timeConstant>
                        </spikeResponder>
                        <id></id>
                        <strength>0.0</strength>
                        <psr>0.0</psr>
                        <increment>1.0</increment>
                        <upperBound>10.0</upperBound>
                        <lowerBound>-10.0</lowerBound>
                        <delay>0</delay>
                        <enabled>true</enabled>
                        <frozen>false</frozen>
                        <dlyPtr>0</dlyPtr>
                        <dlyVal>0.0</dlyVal>
                        <isTemplate>true</isTemplate>
                      </inhibitoryPrototype>
                      <displaySynapses>true</displaySynapses>
                      <recurrent>false</recurrent>
                      <inStatic>true</inStatic>
                      <exStatic>true</exStatic>
                      <useGroupLevelSettings>true</useGroupLevelSettings>
                      <compressedMatrixRep>AAAAUAABAgMEBQYHCAn/////AAECAwQFBgcICf////8AAQIDBAUGBwgJ/////wABAgMEBQYHCAn/
////AAECAwQFBgcICf////8AAQIDBAUGBwgJ/////wABAgMEBQYHCAn/////AAECAwQFBgcICT+A
AAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AA
AD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAA
P4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/
gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+A
AAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AA
AD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAA</compressedMatrixRep>
                      <useFullRepOnSave>false</useFullRepOnSave>
                    </org.simbrain.network.groups.SynapseGroup>
                  </outgoingSgs>
                  <gridThreshold>10</gridThreshold>
                  <betweenNeuronInterval>50</betweenNeuronInterval>
                  <recordAsSpikes>false</recordAsSpikes>
                  <recording>false</recording>
                  <inputMode>false</inputMode>
                  <inputIndex>0</inputIndex>
                  <writeCounter>0</writeCounter>
                  <subsamplingIndices>
                    <int>7</int>
                    <int>1</int>
                    <int>4</int>
                    <int>2</int>
                    <int>3</int>
                    <int>5</int>
                    <int>0</int>
                    <int>6</int>
                  </subsamplingIndices>
                  <fileNum>0</fileNum>
                </org.simbrain.network.groups.NeuronGroup>
                <org.simbrain.network.groups.NeuronGroup reference="../org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup"/>
              </java.util.concurrent.CopyOnWriteArrayList>
            </neuronGroupList>
            <synapseGroupList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
              <java.util.concurrent.CopyOnWriteArrayList>
                <default/>
                <int>2</int>
                <org.simbrain.network.groups.SynapseGroup reference="../../../neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/incomingSgs/org.simbrain.network.groups.SynapseGroup"/>
                <org.simbrain.network.groups.SynapseGroup reference="../../../neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup"/>
              </java.util.concurrent.CopyOnWriteArrayList>
            </synapseGroupList>
            <displayNeuronGroups>true</displayNeuronGroups>
            <numMembers>152</numMembers>
            <betweenLayerInterval>200</betweenLayerInterval>
            <trainingSet>
              <targetData>
                <double-array>
                  <double>0.6677256136528633</double>
                  <double>0.28233079353767554</double>
                  <double>0.23163368437247134</double>
                  <double>-0.4540720324231222</double>
                  <double>0.7406589901201159</double>
                  <double>-0.978683832802584</double>
                  <double>0.873967349197692</double>
                  <double>0.250186472026765</double>
                  <double>-0.5588617099244986</double>
                  <double>-0.6011548451719064</double>
                </double-array>
                <double-array>
                  <double>0.7884121760319236</double>
                  <double>-0.37849103536962625</double>
                  <double>0.03948650682974009</double>
                  <double>0.935085407651048</double>
                  <double>0.3807298549812086</double>
                  <double>-0.09646428330108647</double>
                  <double>-0.17778473117692095</double>
                  <double>0.8199715289794391</double>
                  <double>-0.6433234708312201</double>
                  <double>-0.2104816741854949</double>
                </double-array>
                <double-array>
                  <double>0.5987445183968518</double>
                  <double>0.1967044915034959</double>
                  <double>-0.8767263769568807</double>
                  <double>-0.3150270394011534</double>
                  <double>0.5471060958773295</double>
                  <double>0.8363742219104207</double>
                  <double>-0.4676107513589527</double>
                  <double>-0.7736449552006293</double>
                  <double>0.3569435902847542</double>
                  <double>0.10781834404009571</double>
                </double-array>
                <double-array>
                  <double>0.4298248202065682</double>
                  <double>-0.5274355499278343</double>
                  <double>0.46601253568375856</double>
                  <double>0.12534728610881074</double>
                  <double>-0.7827556604030346</double>
                  <double>-0.6791439488738078</double>
                  <double>0.3367746348611296</double>
                  <double>-0.25202000860227547</double>
                  <double>-0.30907742014726436</double>
                  <double>0.6459958872291416</double>
                </double-array>
                <double-array>
                  <double>-0.8174282605916272</double>
                  <double>-0.2926482971023512</double>
                  <double>0.7904301851200863</double>
                  <double>-0.5787310248756397</double>
                  <double>0.32825420456319376</double>
                  <double>-0.44253065696996075</double>
                  <double>0.5720141110501908</double>
                  <double>0.6522101062985859</double>
                  <double>0.47802998839493993</double>
                  <double>0.3680068699925765</double>
                </double-array>
              </targetData>
              <percentValidation>0.25</percentValidation>
            </trainingSet>
          </parentGroup>
          <updateRule>Linear</updateRule>
          <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
          <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
            <java.util.concurrent.CopyOnWriteArrayList>
              <default/>
              <int>5</int>
              <org.simbrain.network.core.Neuron reference="../../../.."/>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.4</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator>
                    <pdf>UNIFORM</pdf>
                    <param1>0.0</param1>
                    <param2>1.0</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>1.0</upperBound>
                  <lowerBound>-1.0</lowerBound>
                </updateRule>
                <id>Neuron_396</id>
                <label>Number of taps</label>
                <activation>0.9143429298347578</activation>
                <spike>false</spike>
                <buffer>0.9143429298347578</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>412.82283339842775</x>
                <y>-329.52296857342054</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.025</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator>
                    <pdf>NORMAL</pdf>
                    <param1>1.0</param1>
                    <param2>0.5</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>1.0</upperBound>
                  <lowerBound>-1.0</lowerBound>
                </updateRule>
                <id>Neuron_397</id>
                <label>Locations of stimuli&apos;</label>
                <activation>0.9245910722061206</activation>
                <spike>false</spike>
                <buffer>0.9245910722061206</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>562.8228333984277</x>
                <y>-330.5390676700263</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.002</increment>
                  <slope>1.0</slope>
                  <bias>-1.0</bias>
                  <noiseGenerator>
                    <pdf>UNIFORM</pdf>
                    <param1>0.0</param1>
                    <param2>1.0</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>1.0</upperBound>
                  <lowerBound>-1.0</lowerBound>
                </updateRule>
                <id>Neuron_398</id>
                <label>ISI&apos;</label>
                <activation>-0.9985579078716018</activation>
                <spike>false</spike>
                <buffer>-0.9985579078716018</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>712.8228333984277</x>
                <y>-329.52296857342054</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.02</increment>
                  <slope>1.0</slope>
                  <bias>-1.0</bias>
                  <noiseGenerator>
                    <pdf>UNIFORM</pdf>
                    <param1>0.0</param1>
                    <param2>1.0</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>1.0</upperBound>
                  <lowerBound>-1.0</lowerBound>
                </updateRule>
                <id>Neuron_400</id>
                <label>Speed uncertainty&apos;</label>
                <activation>-1.0</activation>
                <spike>false</spike>
                <buffer>-1.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>866.5045634871977</x>
                <y>-329.52296857342066</y>
                <z>0.0</z>
                <clamped>false</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
            </java.util.concurrent.CopyOnWriteArrayList>
          </neuronList>
          <layout class="org.simbrain.network.layouts.LineLayout">
            <orientation>HORIZONTAL</orientation>
            <spacing>150.0</spacing>
            <initialX>262.82283339842775</initialX>
            <initialY>-329.52296857342054</initialY>
          </layout>
          <incomingSgs/>
          <outgoingSgs>
            <org.simbrain.network.groups.SynapseGroup reference="../../parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/incomingSgs/org.simbrain.network.groups.SynapseGroup"/>
          </outgoingSgs>
          <gridThreshold>10</gridThreshold>
          <betweenNeuronInterval>50</betweenNeuronInterval>
          <recordAsSpikes>false</recordAsSpikes>
          <recording>false</recording>
          <inputMode>false</inputMode>
          <inputIndex>0</inputIndex>
          <writeCounter>0</writeCounter>
          <subsamplingIndices>
            <int>0</int>
            <int>4</int>
            <int>2</int>
            <int>1</int>
            <int>3</int>
          </subsamplingIndices>
          <fileNum>0</fileNum>
        </parentGroup>
        <updatePriority>0</updatePriority>
        <auxValue>0.0</auxValue>
      </target>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_867</id>
      <strength>0.2</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_868</id>
      <strength>0.2</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_869</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_870</id>
      <strength>0.2</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_871</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_872</id>
      <strength>0.2</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_873</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_874</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_875</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_876</id>
      <strength>0.2</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source>
        <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
          <inputType>WEIGHTED</inputType>
          <increment>1.0</increment>
          <slope>1.0</slope>
          <bias>0.0</bias>
          <noiseGenerator>
            <pdf>UNIFORM</pdf>
            <param1>0.0</param1>
            <param2>1.0</param2>
            <upperBound>1.0</upperBound>
            <lowerBound>0.0</lowerBound>
            <clipping>false</clipping>
          </noiseGenerator>
          <addNoise>false</addNoise>
          <clipping>true</clipping>
          <upperBound>1000.0</upperBound>
          <lowerBound>0.0</lowerBound>
        </updateRule>
        <id>Neuron_464</id>
        <label>ISI (ms) [1-1000]</label>
        <activation>-0.22714603686907386</activation>
        <spike>false</spike>
        <buffer>0.0</buffer>
        <spkBuffer>false</spkBuffer>
        <inputValue>0.0</inputValue>
        <parent reference="../../../.."/>
        <x>718.2712750329302</x>
        <y>-67.00929911256809</y>
        <z>0.0</z>
        <clamped>true</clamped>
        <polarity>BOTH</polarity>
        <targetValue>0.0</targetValue>
        <parentGroup class="org.simbrain.network.groups.NeuronGroup">
          <parentNetwork reference="../../../../.."/>
          <id>Group_22</id>
          <label>Input data</label>
          <stateInfo></stateInfo>
          <markedForDeletion>false</markedForDeletion>
          <updateRule>Linear</updateRule>
          <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
          <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
            <java.util.concurrent.CopyOnWriteArrayList>
              <default/>
              <int>22</int>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator>
                    <pdf>UNIFORM</pdf>
                    <param1>0.0</param1>
                    <param2>1.0</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_444</id>
                <label>Number of taps at this point (max. 5)</label>
                <activation>-0.6056733068636484</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>282.2151143366113</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator>
                    <pdf>UNIFORM</pdf>
                    <param1>0.0</param1>
                    <param2>1.0</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>6.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_445</id>
                <label></label>
                <activation>0.19255134010641872</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>332.21511433661107</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator>
                    <pdf>UNIFORM</pdf>
                    <param1>0.0</param1>
                    <param2>1.0</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_446</id>
                <label></label>
                <activation>-0.3834750366028792</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>382.21511433661095</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[3]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_447</id>
                <label></label>
                <activation>0.969255116531444</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>432.21511433660925</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[3]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_448</id>
                <label></label>
                <activation>-0.9733368485306695</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>482.2151143366075</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[3]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_449</id>
                <label></label>
                <activation>0.7970887386284393</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>532.2151143366065</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[3]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_450</id>
                <label></label>
                <activation>0.4270321640919006</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>582.2151143366061</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[3]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_451</id>
                <label></label>
                <activation>-0.27129861081393414</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>632.2151143366058</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[3]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_452</id>
                <label></label>
                <activation>-0.4500290902914761</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>682.2151143366058</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[3]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_453</id>
                <label></label>
                <activation>0.6792386606132024</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>734.669786332044</x>
                <y>-5.06614948116749</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator>
                    <pdf>UNIFORM</pdf>
                    <param1>0.0</param1>
                    <param2>1.0</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_454</id>
                <label>Locations of stimuli (cm) [0-40] *** set sigma(s) in here ***</label>
                <activation>-0.028792528791577787</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>257.2151143366114</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[11]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_455</id>
                <label></label>
                <activation>-0.8976207502101203</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>307.2151143366113</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[11]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_456</id>
                <label></label>
                <activation>-0.03667070136730177</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>357.2151143366112</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[11]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_457</id>
                <label></label>
                <activation>0.04625929558927999</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>407.2151143366108</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[11]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_458</id>
                <label></label>
                <activation>-0.8143531490467455</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>457.2151143366082</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[11]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_459</id>
                <label></label>
                <activation>-0.8631412578398996</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>507.21511433660663</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[11]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_460</id>
                <label></label>
                <activation>-0.5009107016303913</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>557.2151143366063</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[11]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_461</id>
                <label></label>
                <activation>-0.29184412362026557</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>607.2151143366059</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[11]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_462</id>
                <label></label>
                <activation>-0.6446701598360736</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>657.2151143366058</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[11]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_463</id>
                <label></label>
                <activation>-0.8076245160830615</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>707.2151143366057</x>
                <y>44.933850518832664</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron reference="../../../.."/>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator>
                    <pdf>UNIFORM</pdf>
                    <param1>0.0</param1>
                    <param2>1.0</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>10.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_466</id>
                <label>Speed uncertainty (cm/s) [0-10]</label>
                <activation>-0.34964315856387396</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>873.3488678263323</x>
                <y>-69.45416640868754</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>0</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
            </java.util.concurrent.CopyOnWriteArrayList>
          </neuronList>
          <layout class="org.simbrain.network.layouts.HexagonalGridLayout">
            <initialX>960.142041121928</initialX>
            <initialY>-21.9200408353271</initialY>
            <numColumns>10</numColumns>
            <hSpacing>50.0</hSpacing>
            <vSpacing>50.0</vSpacing>
            <manualColumns>true</manualColumns>
          </layout>
          <incomingSgs/>
          <outgoingSgs/>
          <gridThreshold>10</gridThreshold>
          <betweenNeuronInterval>50</betweenNeuronInterval>
          <testData>
            <double-array>
              <double>-0.6954644213023653</double>
              <double>0.3229821858022892</double>
              <double>0.04577750646529277</double>
              <double>0.13406105540198632</double>
              <double>-0.3181893420569797</double>
              <double>-0.876712275820323</double>
              <double>0.4560258489331186</double>
              <double>-0.0287424169053645</double>
              <double>-0.7712023496553164</double>
              <double>0.7018174174900493</double>
              <double>-0.4120573551472866</double>
              <double>-0.5751699946089772</double>
              <double>0.28166308398626083</double>
              <double>-0.5607184875916136</double>
              <double>0.4015214243983152</double>
              <double>-0.893114294510343</double>
              <double>-0.6219597650108899</double>
              <double>0.3090276169373585</double>
              <double>0.012569814316104155</double>
              <double>0.49517769402698564</double>
              <double>0.21588188785340723</double>
              <double>-0.9058092138358464</double>
            </double-array>
            <double-array>
              <double>0.2725461369985087</double>
              <double>0.0728210494098036</double>
              <double>-0.12721022884459954</double>
              <double>-0.22377569190684987</double>
              <double>0.07875245670163467</double>
              <double>0.8673259640432818</double>
              <double>0.2045836782656978</double>
              <double>0.5960937192133979</double>
              <double>0.33071599705364085</double>
              <double>0.08261267110724568</double>
              <double>-0.960862656839367</double>
              <double>0.5023055087833996</double>
              <double>-0.19789217194826114</double>
              <double>0.6368121694751725</double>
              <double>0.2912751457166025</double>
              <double>0.22533423893063986</double>
              <double>0.3635618719566234</double>
              <double>0.8502997934930427</double>
              <double>0.44678833449004385</double>
              <double>-0.9440990525342614</double>
              <double>0.9702742087021534</double>
              <double>0.27254743834896344</double>
            </double-array>
            <double-array>
              <double>0.998395552195382</double>
              <double>-0.4450520595136187</double>
              <double>-0.38072287256373194</double>
              <double>0.6930213561918659</double>
              <double>0.3637381523534662</double>
              <double>-0.11395589569803333</double>
              <double>-0.9152005024041312</double>
              <double>-0.24950650118717044</double>
              <double>0.575266224103065</double>
              <double>-0.7636533983916507</double>
              <double>-0.34386179562180863</double>
              <double>0.2367749823531442</double>
              <double>-0.3958635444474943</double>
              <double>-0.1198651455605475</double>
              <double>0.3309843549634053</double>
              <double>-0.8149803867112759</double>
              <double>-0.434990009144514</double>
              <double>-0.16067599335122718</double>
              <double>0.9581604050087213</double>
              <double>-0.8606117781744365</double>
              <double>0.24590211662264894</double>
              <double>0.8082543828780984</double>
            </double-array>
            <double-array>
              <double>-0.3227582463327814</double>
              <double>-0.3779969795806035</double>
              <double>0.4170027144558952</double>
              <double>-0.9645541740567329</double>
              <double>0.6685519147554795</double>
              <double>-0.2552364331544028</double>
              <double>0.19465190172313274</double>
              <double>0.19289506102908938</double>
              <double>0.7055352837957833</double>
              <double>-0.8422650192670607</double>
              <double>0.371419569409716</double>
              <double>0.9138853204208424</double>
              <double>-0.7074724263695567</double>
              <double>0.0824610386201532</double>
              <double>-0.9294948560577492</double>
              <double>-0.356831808861511</double>
              <double>0.27445963542708274</double>
              <double>0.047694827421080443</double>
              <double>0.3424383523744179</double>
              <double>-0.2812317716017776</double>
              <double>0.7210460641990928</double>
              <double>-0.8733202931564319</double>
            </double-array>
            <double-array>
              <double>-0.6056733068636484</double>
              <double>0.19255134010641872</double>
              <double>-0.3834750366028792</double>
              <double>0.969255116531444</double>
              <double>-0.9733368485306695</double>
              <double>0.7970887386284393</double>
              <double>0.4270321640919006</double>
              <double>-0.27129861081393414</double>
              <double>-0.4500290902914761</double>
              <double>0.6792386606132024</double>
              <double>-0.028792528791577787</double>
              <double>-0.8976207502101203</double>
              <double>-0.03667070136730177</double>
              <double>0.04625929558927999</double>
              <double>-0.8143531490467455</double>
              <double>-0.8631412578398996</double>
              <double>-0.5009107016303913</double>
              <double>-0.29184412362026557</double>
              <double>-0.6446701598360736</double>
              <double>-0.8076245160830615</double>
              <double>-0.22714603686907386</double>
              <double>-0.34964315856387396</double>
            </double-array>
          </testData>
          <recordAsSpikes>false</recordAsSpikes>
          <recording>false</recording>
          <inputMode>true</inputMode>
          <inputIndex>5</inputIndex>
          <writeCounter>0</writeCounter>
          <subsamplingIndices>
            <int>9</int>
            <int>10</int>
            <int>2</int>
            <int>14</int>
            <int>0</int>
            <int>11</int>
            <int>8</int>
            <int>4</int>
            <int>21</int>
            <int>5</int>
            <int>1</int>
            <int>3</int>
            <int>6</int>
            <int>19</int>
            <int>15</int>
            <int>16</int>
            <int>13</int>
            <int>20</int>
            <int>18</int>
            <int>17</int>
            <int>12</int>
            <int>7</int>
          </subsamplingIndices>
          <fileNum>0</fileNum>
        </parentGroup>
        <updatePriority>0</updatePriority>
        <auxValue>0.0</auxValue>
      </source>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_897</id>
      <strength>0.002</strength>
      <psr>0.0014420921283981856</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>1</dlyPtr>
      <dlyVal>0.7714009728376194</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <target reference="../../org.simbrain.network.core.Synapse/source"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_898</id>
      <strength>1.0</strength>
      <psr>-0.3227582463327814</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <target reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_900</id>
      <strength>1.0</strength>
      <psr>-0.3779969795806035</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <target reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_901</id>
      <strength>1.0</strength>
      <psr>0.4170027144558952</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
      <target reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_902</id>
      <strength>1.0</strength>
      <psr>-0.9645541740567329</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
      <target reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_903</id>
      <strength>1.0</strength>
      <psr>0.6685519147554795</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
      <target reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_904</id>
      <strength>1.0</strength>
      <psr>-0.2552364331544028</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
      <target reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_905</id>
      <strength>1.0</strength>
      <psr>0.19465190172313274</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
      <target reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_906</id>
      <strength>1.0</strength>
      <psr>0.19289506102908938</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
      <target reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_907</id>
      <strength>1.0</strength>
      <psr>0.7055352837957833</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
      <target reference="../../org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_908</id>
      <strength>1.0</strength>
      <psr>-0.8422650192670607</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_909</id>
      <strength>1.6730117268383942</strength>
      <psr>-0.5399783310485384</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_910</id>
      <strength>0.5754356954877575</strength>
      <psr>-0.21751295483723626</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_911</id>
      <strength>0.6252082228407192</strength>
      <psr>0.26071352602472614</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_912</id>
      <strength>1.1558905927809708</strength>
      <psr>-1.1149190960197968</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_913</id>
      <strength>1.5971925585836229</strength>
      <psr>1.0678061432742845</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_914</id>
      <strength>1.7479099506849038</strength>
      <psr>-0.446130301287903</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_915</id>
      <strength>0.844800141350725</strength>
      <psr>0.16444195408988996</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_916</id>
      <strength>1.6255425245968405</strength>
      <psr>0.3135591244874876</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_917</id>
      <strength>2.2101601051047632</strength>
      <psr>1.5593459369892075</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_918</id>
      <strength>0.1578874449197536</strength>
      <psr>-0.13298307183736324</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[11]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_919</id>
      <strength>-5.5050998053592854</strength>
      <psr>-2.044701799264057</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[12]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_920</id>
      <strength>-8.565977444816069</strength>
      <psr>-7.8283210418734415</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[13]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_921</id>
      <strength>2.1728607338084287</strength>
      <psr>-1.5372390555105844</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[14]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_922</id>
      <strength>3.661908358865281</strength>
      <psr>0.30196476660385174</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[15]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_923</id>
      <strength>-4.137642837651304</strength>
      <psr>3.845917733801076</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[16]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_924</id>
      <strength>-9.766941264818612</strength>
      <psr>3.4851553185693596</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[17]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_925</id>
      <strength>-3.4956216125025756</strength>
      <psr>-0.959407033358488</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[18]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_926</id>
      <strength>-3.7493878920328214</strength>
      <psr>-0.178826408445194</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[19]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_927</id>
      <strength>10.0</strength>
      <psr>3.424383523744179</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[20]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianThresholdRule">
        <learningRate>0.1</learningRate>
        <outputThresholdMomentum>0.1</outputThresholdMomentum>
        <outputThreshold>0.1</outputThreshold>
        <useSlidingOutputThreshold>false</useSlidingOutputThreshold>
      </learningRule>
      <id>Synapse_928</id>
      <strength>-8.589588061764175</strength>
      <psr>2.415665067939418</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[22]"/>
      <target reference="../../org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_930</id>
      <strength>0.2</strength>
      <psr>-0.1746640586312864</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source>
        <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
          <inputType>WEIGHTED</inputType>
          <increment>1.0</increment>
          <slope>1.0</slope>
          <bias>0.0</bias>
          <noiseGenerator>
            <pdf>UNIFORM</pdf>
            <param1>0.0</param1>
            <param2>1.0</param2>
            <upperBound>1.0</upperBound>
            <lowerBound>0.0</lowerBound>
            <clipping>false</clipping>
          </noiseGenerator>
          <addNoise>false</addNoise>
          <clipping>true</clipping>
          <upperBound>5.0</upperBound>
          <lowerBound>0.0</lowerBound>
        </updateRule>
        <id>Neuron_722</id>
        <label>Number of taps at this point (max. 5)</label>
        <activation>4.008804303495695</activation>
        <spike>false</spike>
        <buffer>0.0</buffer>
        <spkBuffer>false</spkBuffer>
        <inputValue>0.0</inputValue>
        <parent reference="../../../.."/>
        <x>1449.3332700399203</x>
        <y>-97.3655010956701</y>
        <z>0.0</z>
        <clamped>true</clamped>
        <polarity>BOTH</polarity>
        <targetValue>0.0</targetValue>
        <parentGroup class="org.simbrain.network.groups.NeuronGroup">
          <parentNetwork reference="../../../../.."/>
          <id>Group_39</id>
          <label>Layer 1</label>
          <stateInfo></stateInfo>
          <markedForDeletion>false</markedForDeletion>
          <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork">
            <parentNetwork reference="../../../../../.."/>
            <id>Group_38</id>
            <label>Backprop</label>
            <stateInfo></stateInfo>
            <markedForDeletion>false</markedForDeletion>
            <neuronGroupList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
              <java.util.concurrent.CopyOnWriteArrayList>
                <default/>
                <int>4</int>
                <org.simbrain.network.groups.NeuronGroup reference="../../../.."/>
                <org.simbrain.network.groups.NeuronGroup>
                  <parentNetwork reference="../../../../../../../../.."/>
                  <id>Group_40</id>
                  <label>Layer 2</label>
                  <stateInfo></stateInfo>
                  <markedForDeletion>false</markedForDeletion>
                  <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../.."/>
                  <updateRule>Sigmoidal (Discrete)</updateRule>
                  <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
                  <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
                    <java.util.concurrent.CopyOnWriteArrayList>
                      <default/>
                      <int>5</int>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.2</increment>
                          <slope>1.0</slope>
                          <bias>-1.0</bias>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <clipping>true</clipping>
                          <upperBound>1.0</upperBound>
                          <lowerBound>-1.0</lowerBound>
                        </updateRule>
                        <id>Neuron_744</id>
                        <label>Number of stimulus</label>
                        <activation>0.19999999999999996</activation>
                        <spike>false</spike>
                        <buffer>0.19999999999999996</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>1528.9980318055011</x>
                        <y>-276.61542873816956</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>2</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.4</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.0</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>-1.0</lowerBound>
                        </updateRule>
                        <id>Neuron_745</id>
                        <label>Number of taps&apos;</label>
                        <activation>-0.999999936573471</activation>
                        <spike>false</spike>
                        <buffer>-0.999999936573471</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>1648.9980318055011</x>
                        <y>-276.61542873816956</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>2</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>1.0</increment>
                          <slope>1.0</slope>
                          <bias>0.0</bias>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <clipping>true</clipping>
                          <upperBound>40.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_746</id>
                        <label>Locations of stimuli&apos;</label>
                        <activation>0.0</activation>
                        <spike>false</spike>
                        <buffer>0.0</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>1768.9980318055011</x>
                        <y>-276.61542873816956</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>2</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.002</increment>
                          <slope>1.0</slope>
                          <bias>-1.0</bias>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <clipping>true</clipping>
                          <upperBound>1.0</upperBound>
                          <lowerBound>-1.0</lowerBound>
                        </updateRule>
                        <id>Neuron_747</id>
                        <label>ISI&apos;</label>
                        <activation>0.04329016639795635</activation>
                        <spike>false</spike>
                        <buffer>0.04329016639795635</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>1984.7315737782687</x>
                        <y>-270.2398029184588</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>2</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.02</increment>
                          <slope>1.0</slope>
                          <bias>-1.0</bias>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <clipping>true</clipping>
                          <upperBound>1.0</upperBound>
                          <lowerBound>-1.0</lowerBound>
                        </updateRule>
                        <id>Neuron_748</id>
                        <label>Speed uncertainty&apos;</label>
                        <activation>-1.0</activation>
                        <spike>false</spike>
                        <buffer>-1.0</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>2099.2820936651196</x>
                        <y>-271.602172946746</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>2</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                    </java.util.concurrent.CopyOnWriteArrayList>
                  </neuronList>
                  <layout class="org.simbrain.network.layouts.LineLayout">
                    <orientation>HORIZONTAL</orientation>
                    <spacing>120.0</spacing>
                    <initialX>1150.6428678516115</initialX>
                    <initialY>-407.04835792534664</initialY>
                  </layout>
                  <incomingSgs/>
                  <outgoingSgs>
                    <org.simbrain.network.groups.SynapseGroup>
                      <parentNetwork reference="../../../../../../../../../../.."/>
                      <id>Group_44</id>
                      <label>2 → 3</label>
                      <stateInfo></stateInfo>
                      <markedForDeletion>false</markedForDeletion>
                      <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../.."/>
                      <sourceNeuronGroup reference="../../.."/>
                      <targetNeuronGroup>
                        <parentNetwork reference="../../../../../../../../../../../.."/>
                        <id>Group_41</id>
                        <label>Layer 3</label>
                        <stateInfo></stateInfo>
                        <markedForDeletion>false</markedForDeletion>
                        <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../../.."/>
                        <updateRule>Sigmoidal (Discrete)</updateRule>
                        <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
                        <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
                          <java.util.concurrent.CopyOnWriteArrayList>
                            <default/>
                            <int>8</int>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_749</id>
                              <label></label>
                              <activation>0.14720289692187155</activation>
                              <spike>false</spike>
                              <buffer>0.14720289692187155</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>1576.985002642991</x>
                              <y>-493.63577576664665</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_750</id>
                              <label></label>
                              <activation>0.14720289692187155</activation>
                              <spike>false</spike>
                              <buffer>0.14720289692187155</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>1626.985002642991</x>
                              <y>-493.63577576664665</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_751</id>
                              <label></label>
                              <activation>0.14720289692187155</activation>
                              <spike>false</spike>
                              <buffer>0.14720289692187155</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>1676.985002642991</x>
                              <y>-493.63577576664665</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_752</id>
                              <label></label>
                              <activation>0.14720289692187155</activation>
                              <spike>false</spike>
                              <buffer>0.14720289692187155</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>1726.985002642991</x>
                              <y>-493.63577576664665</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_753</id>
                              <label></label>
                              <activation>0.14720289692187155</activation>
                              <spike>false</spike>
                              <buffer>0.14720289692187155</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>1776.985002642991</x>
                              <y>-493.63577576664665</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_754</id>
                              <label></label>
                              <activation>0.14720289692187155</activation>
                              <spike>false</spike>
                              <buffer>0.14720289692187155</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>1826.985002642991</x>
                              <y>-493.63577576664665</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_755</id>
                              <label></label>
                              <activation>0.14720289692187155</activation>
                              <spike>false</spike>
                              <buffer>0.14720289692187155</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>1876.985002642991</x>
                              <y>-493.63577576664665</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.0</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_756</id>
                              <label></label>
                              <activation>0.14720289692187155</activation>
                              <spike>false</spike>
                              <buffer>0.14720289692187155</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>1926.985002642991</x>
                              <y>-493.63577576664665</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                          </java.util.concurrent.CopyOnWriteArrayList>
                        </neuronList>
                        <layout class="org.simbrain.network.layouts.LineLayout">
                          <orientation>HORIZONTAL</orientation>
                          <spacing>50.0</spacing>
                          <initialX>0.0</initialX>
                          <initialY>0.0</initialY>
                        </layout>
                        <incomingSgs>
                          <org.simbrain.network.groups.SynapseGroup reference="../../.."/>
                        </incomingSgs>
                        <outgoingSgs>
                          <org.simbrain.network.groups.SynapseGroup>
                            <parentNetwork reference="../../../../../../../../../../../../../.."/>
                            <id>Group_45</id>
                            <label>3 → 4</label>
                            <stateInfo></stateInfo>
                            <markedForDeletion>false</markedForDeletion>
                            <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../../../../.."/>
                            <sourceNeuronGroup reference="../../.."/>
                            <targetNeuronGroup>
                              <parentNetwork reference="../../../../../../../../../../../../../../.."/>
                              <id>Group_42</id>
                              <label>Layer 4</label>
                              <stateInfo></stateInfo>
                              <markedForDeletion>false</markedForDeletion>
                              <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../../../../../.."/>
                              <updateRule>Sigmoidal (Discrete)</updateRule>
                              <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
                              <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
                                <java.util.concurrent.CopyOnWriteArrayList>
                                  <default/>
                                  <int>10</int>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_757</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1523.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_758</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1573.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_759</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1623.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_760</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1673.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_761</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1723.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_762</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1773.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_763</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1823.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_764</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1873.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_765</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1923.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                  <org.simbrain.network.core.Neuron>
                                    <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                      <inputType>WEIGHTED</inputType>
                                      <increment>0.1</increment>
                                      <sFunction>LOGISTIC</sFunction>
                                      <bias>0.0</bias>
                                      <slope>1.0</slope>
                                      <noiseGenerator>
                                        <pdf>UNIFORM</pdf>
                                        <param1>0.0</param1>
                                        <param2>1.0</param2>
                                        <upperBound>1.0</upperBound>
                                        <lowerBound>0.0</lowerBound>
                                        <clipping>false</clipping>
                                      </noiseGenerator>
                                      <addNoise>false</addNoise>
                                      <upperBound>1.0</upperBound>
                                      <lowerBound>0.0</lowerBound>
                                    </updateRule>
                                    <id>Neuron_766</id>
                                    <label></label>
                                    <activation>0.7645201752797094</activation>
                                    <spike>false</spike>
                                    <buffer>0.7645201752797094</buffer>
                                    <spkBuffer>false</spkBuffer>
                                    <inputValue>0.0</inputValue>
                                    <parent reference="../../../../../../../../../../../../../../../../../.."/>
                                    <x>1973.9347270500045</x>
                                    <y>-763.8201349835838</y>
                                    <z>0.0</z>
                                    <clamped>false</clamped>
                                    <polarity>BOTH</polarity>
                                    <targetValue>0.0</targetValue>
                                    <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                                    <updatePriority>3</updatePriority>
                                    <auxValue>0.0</auxValue>
                                  </org.simbrain.network.core.Neuron>
                                </java.util.concurrent.CopyOnWriteArrayList>
                              </neuronList>
                              <layout class="org.simbrain.network.layouts.LineLayout">
                                <orientation>HORIZONTAL</orientation>
                                <spacing>50.0</spacing>
                                <initialX>1120.8272270685486</initialX>
                                <initialY>-904.8612081825752</initialY>
                              </layout>
                              <incomingSgs>
                                <org.simbrain.network.groups.SynapseGroup reference="../../.."/>
                              </incomingSgs>
                              <outgoingSgs/>
                              <gridThreshold>10</gridThreshold>
                              <betweenNeuronInterval>50</betweenNeuronInterval>
                              <recordAsSpikes>false</recordAsSpikes>
                              <recording>false</recording>
                              <inputMode>false</inputMode>
                              <inputIndex>0</inputIndex>
                              <writeCounter>0</writeCounter>
                              <subsamplingIndices>
                                <int>9</int>
                                <int>7</int>
                                <int>6</int>
                                <int>4</int>
                                <int>1</int>
                                <int>3</int>
                                <int>2</int>
                                <int>0</int>
                                <int>5</int>
                                <int>8</int>
                              </subsamplingIndices>
                              <fileNum>0</fileNum>
                            </targetNeuronGroup>
                            <connectionManager class="org.simbrain.network.connections.AllToAll">
                              <selfConnectionAllowed>false</selfConnectionAllowed>
                            </connectionManager>
                            <excitatoryRatio>1.0</excitatoryRatio>
                            <excitatoryPrototype>
                              <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                                <clipped>false</clipped>
                              </learningRule>
                              <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay">
                                <value>0.0</value>
                                <jumpHeight>1.0</jumpHeight>
                                <baseLine>0.0</baseLine>
                                <timeConstant>3.0</timeConstant>
                              </spikeResponder>
                              <id></id>
                              <strength>0.0</strength>
                              <psr>0.0</psr>
                              <increment>1.0</increment>
                              <upperBound>10.0</upperBound>
                              <lowerBound>-10.0</lowerBound>
                              <delay>0</delay>
                              <enabled>true</enabled>
                              <frozen>false</frozen>
                              <dlyPtr>0</dlyPtr>
                              <dlyVal>0.0</dlyVal>
                              <isTemplate>true</isTemplate>
                            </excitatoryPrototype>
                            <inhibitoryPrototype>
                              <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                                <clipped>false</clipped>
                              </learningRule>
                              <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay" reference="../../excitatoryPrototype/spikeResponder"/>
                              <id></id>
                              <strength>0.0</strength>
                              <psr>0.0</psr>
                              <increment>1.0</increment>
                              <upperBound>10.0</upperBound>
                              <lowerBound>-10.0</lowerBound>
                              <delay>0</delay>
                              <enabled>true</enabled>
                              <frozen>false</frozen>
                              <dlyPtr>0</dlyPtr>
                              <dlyVal>0.0</dlyVal>
                              <isTemplate>true</isTemplate>
                            </inhibitoryPrototype>
                            <displaySynapses>true</displaySynapses>
                            <recurrent>false</recurrent>
                            <inStatic>true</inStatic>
                            <exStatic>false</exStatic>
                            <useGroupLevelSettings>true</useGroupLevelSettings>
                            <compressedMatrixRep>AAAAUAABAgMEBQYHCAn/////AAECAwQFBgcICf////8AAQIDBAUGBwgJ/////wABAgMEBQYHCAn/
////AAECAwQFBgcICf////8AAQIDBAUGBwgJ/////wABAgMEBQYHCAn/////AAECAwQFBgcICT+A
AAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AA
AD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAA
P4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/
gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+A
AAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AA
AD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAA</compressedMatrixRep>
                            <useFullRepOnSave>false</useFullRepOnSave>
                          </org.simbrain.network.groups.SynapseGroup>
                        </outgoingSgs>
                        <gridThreshold>10</gridThreshold>
                        <betweenNeuronInterval>50</betweenNeuronInterval>
                        <recordAsSpikes>false</recordAsSpikes>
                        <recording>false</recording>
                        <inputMode>false</inputMode>
                        <inputIndex>0</inputIndex>
                        <writeCounter>0</writeCounter>
                        <subsamplingIndices>
                          <int>0</int>
                          <int>3</int>
                          <int>4</int>
                          <int>2</int>
                          <int>1</int>
                          <int>7</int>
                          <int>6</int>
                          <int>5</int>
                        </subsamplingIndices>
                        <fileNum>0</fileNum>
                      </targetNeuronGroup>
                      <connectionManager class="org.simbrain.network.connections.AllToAll">
                        <selfConnectionAllowed>false</selfConnectionAllowed>
                      </connectionManager>
                      <excitatoryRatio>1.0</excitatoryRatio>
                      <excitatoryPrototype>
                        <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                          <clipped>false</clipped>
                        </learningRule>
                        <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay" reference="../../targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/excitatoryPrototype/spikeResponder"/>
                        <id></id>
                        <strength>0.0</strength>
                        <psr>0.0</psr>
                        <increment>1.0</increment>
                        <upperBound>10.0</upperBound>
                        <lowerBound>-10.0</lowerBound>
                        <delay>0</delay>
                        <enabled>true</enabled>
                        <frozen>false</frozen>
                        <dlyPtr>0</dlyPtr>
                        <dlyVal>0.0</dlyVal>
                        <isTemplate>true</isTemplate>
                      </excitatoryPrototype>
                      <inhibitoryPrototype>
                        <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                          <clipped>false</clipped>
                        </learningRule>
                        <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay" reference="../../targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/excitatoryPrototype/spikeResponder"/>
                        <id></id>
                        <strength>0.0</strength>
                        <psr>0.0</psr>
                        <increment>1.0</increment>
                        <upperBound>10.0</upperBound>
                        <lowerBound>-10.0</lowerBound>
                        <delay>0</delay>
                        <enabled>true</enabled>
                        <frozen>false</frozen>
                        <dlyPtr>0</dlyPtr>
                        <dlyVal>0.0</dlyVal>
                        <isTemplate>true</isTemplate>
                      </inhibitoryPrototype>
                      <displaySynapses>true</displaySynapses>
                      <recurrent>false</recurrent>
                      <inStatic>true</inStatic>
                      <exStatic>false</exStatic>
                      <useGroupLevelSettings>true</useGroupLevelSettings>
                      <compressedMatrixRep>AAAAKAABAgMEBQYH/////wABAgMEBQYH/////wABAgMEBQYH/////wABAgMEBQYH/////wABAgME
BQYHP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+A
AAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AA
AD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAA==</compressedMatrixRep>
                      <useFullRepOnSave>false</useFullRepOnSave>
                    </org.simbrain.network.groups.SynapseGroup>
                  </outgoingSgs>
                  <gridThreshold>10</gridThreshold>
                  <betweenNeuronInterval>50</betweenNeuronInterval>
                  <recordAsSpikes>false</recordAsSpikes>
                  <recording>false</recording>
                  <inputMode>false</inputMode>
                  <inputIndex>0</inputIndex>
                  <writeCounter>0</writeCounter>
                  <subsamplingIndices>
                    <int>3</int>
                    <int>1</int>
                    <int>2</int>
                    <int>0</int>
                    <int>4</int>
                  </subsamplingIndices>
                  <fileNum>0</fileNum>
                </org.simbrain.network.groups.NeuronGroup>
                <org.simbrain.network.groups.NeuronGroup reference="../org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup"/>
                <org.simbrain.network.groups.NeuronGroup reference="../org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup"/>
              </java.util.concurrent.CopyOnWriteArrayList>
            </neuronGroupList>
            <synapseGroupList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
              <java.util.concurrent.CopyOnWriteArrayList>
                <default/>
                <int>2</int>
                <org.simbrain.network.groups.SynapseGroup reference="../../../neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup"/>
                <org.simbrain.network.groups.SynapseGroup reference="../../../neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup"/>
              </java.util.concurrent.CopyOnWriteArrayList>
            </synapseGroupList>
            <displayNeuronGroups>true</displayNeuronGroups>
            <numMembers>275</numMembers>
            <betweenLayerInterval>200</betweenLayerInterval>
            <trainingSet>
              <inputData>
                <double-array>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                </double-array>
                <double-array>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                </double-array>
                <double-array>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                </double-array>
                <double-array>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                </double-array>
                <double-array>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                  <double>0.0</double>
                </double-array>
              </inputData>
              <percentValidation>0.25</percentValidation>
            </trainingSet>
          </parentGroup>
          <updateRule>Linear</updateRule>
          <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
          <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
            <java.util.concurrent.CopyOnWriteArrayList>
              <default/>
              <int>22</int>
              <org.simbrain.network.core.Neuron reference="../../../.."/>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator>
                    <pdf>UNIFORM</pdf>
                    <param1>0.0</param1>
                    <param2>1.0</param2>
                    <upperBound>1.0</upperBound>
                    <lowerBound>0.0</lowerBound>
                    <clipping>false</clipping>
                  </noiseGenerator>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_723</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1499.3332700399203</x>
                <y>-97.3655010956701</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_724</id>
                <label></label>
                <activation>0.568905962193082</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1549.3332700399203</x>
                <y>-97.3655010956701</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_725</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1599.3332700399203</x>
                <y>-97.3655010956701</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_726</id>
                <label></label>
                <activation>0.08630572517505097</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1649.3332700399203</x>
                <y>-97.3655010956701</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_727</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1699.3332700399203</x>
                <y>-97.3655010956701</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_728</id>
                <label></label>
                <activation>3.7032167143292534</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1749.3332700399203</x>
                <y>-97.3655010956701</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_729</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1799.3332700399203</x>
                <y>-97.3655010956701</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_730</id>
                <label></label>
                <activation>1.4162485965480864</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1849.3332700399203</x>
                <y>-97.3655010956701</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>5.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_731</id>
                <label></label>
                <activation>1.5968025385038702</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1899.3332700399203</x>
                <y>-97.3655010956701</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_732</id>
                <label>Locations of stimuli (cm) [0-40] *** set sigma(s) here ***</label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1424.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_733</id>
                <label></label>
                <activation>0.5</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1474.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_734</id>
                <label></label>
                <activation>0.9999999999999999</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1524.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_735</id>
                <label></label>
                <activation>1.5000000000000002</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1574.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_736</id>
                <label></label>
                <activation>2.600000000000001</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1624.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_737</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1674.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_738</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1724.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_739</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1774.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_740</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1824.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>40.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_741</id>
                <label></label>
                <activation>0.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>1874.3332700399203</x>
                <y>-47.36550109567005</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>1.0</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>1000.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_742</id>
                <label>ISI (ms) [1-1000]</label>
                <activation>521.6450831989781</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>2000.956758654256</x>
                <y>-99.91089320987352</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
              <org.simbrain.network.core.Neuron>
                <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                  <inputType>WEIGHTED</inputType>
                  <increment>0.1</increment>
                  <slope>1.0</slope>
                  <bias>0.0</bias>
                  <noiseGenerator reference="../../../org.simbrain.network.core.Neuron[2]/updateRule/noiseGenerator"/>
                  <addNoise>false</addNoise>
                  <clipping>true</clipping>
                  <upperBound>10.0</upperBound>
                  <lowerBound>0.0</lowerBound>
                </updateRule>
                <id>Neuron_743</id>
                <label>Speed uncertainty (cm/s) [0-10]</label>
                <activation>-20.0</activation>
                <spike>false</spike>
                <buffer>0.0</buffer>
                <spkBuffer>false</spkBuffer>
                <inputValue>0.0</inputValue>
                <parent reference="../../../../../../../.."/>
                <x>2128.942523827144</x>
                <y>-100.42516511771048</y>
                <z>0.0</z>
                <clamped>true</clamped>
                <polarity>BOTH</polarity>
                <targetValue>0.0</targetValue>
                <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                <updatePriority>1</updatePriority>
                <auxValue>0.0</auxValue>
              </org.simbrain.network.core.Neuron>
            </java.util.concurrent.CopyOnWriteArrayList>
          </neuronList>
          <layout class="org.simbrain.network.layouts.HexagonalGridLayout">
            <initialX>1307.6456583774464</initialX>
            <initialY>-210.11819026315698</initialY>
            <numColumns>10</numColumns>
            <hSpacing>50.0</hSpacing>
            <vSpacing>50.0</vSpacing>
            <manualColumns>true</manualColumns>
          </layout>
          <incomingSgs/>
          <outgoingSgs/>
          <gridThreshold>10</gridThreshold>
          <betweenNeuronInterval>50</betweenNeuronInterval>
          <recordAsSpikes>false</recordAsSpikes>
          <recording>false</recording>
          <inputMode>false</inputMode>
          <inputIndex>0</inputIndex>
          <writeCounter>0</writeCounter>
          <subsamplingIndices>
            <int>21</int>
            <int>7</int>
            <int>17</int>
            <int>11</int>
            <int>18</int>
            <int>1</int>
            <int>10</int>
            <int>12</int>
            <int>16</int>
            <int>19</int>
            <int>9</int>
            <int>6</int>
            <int>14</int>
            <int>5</int>
            <int>20</int>
            <int>3</int>
            <int>4</int>
            <int>8</int>
            <int>13</int>
            <int>2</int>
            <int>0</int>
            <int>15</int>
          </subsamplingIndices>
          <fileNum>0</fileNum>
        </parentGroup>
        <updatePriority>1</updatePriority>
        <auxValue>0.0</auxValue>
      </source>
      <target reference="../source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1873</id>
      <strength>-4.033946219051984</strength>
      <psr>-16.17130096300578</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1874</id>
      <strength>-0.0012261518472161971</strength>
      <psr>-0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1875</id>
      <strength>-0.5647211422509779</strength>
      <psr>-0.3212732248030689</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1876</id>
      <strength>-0.06080276962646172</strength>
      <psr>-0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1877</id>
      <strength>-0.052866447850886206</strength>
      <psr>-0.004562677119199749</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1878</id>
      <strength>0.043067670281344624</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1879</id>
      <strength>-3.6304501310272546</strength>
      <psr>-13.444343605758958</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1880</id>
      <strength>0.047794114822068426</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1881</id>
      <strength>-1.380783835074337</strength>
      <psr>-1.9555331685603143</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.OjaRule">
        <learningRate>0.1</learningRate>
        <normalizationFactor>1.0</normalizationFactor>
      </learningRule>
      <id>Synapse_1882</id>
      <strength>-1.650828980174054</strength>
      <psr>-2.636047906177685</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[11]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1883</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[12]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1884</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[13]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1885</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[14]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1886</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[15]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1887</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[16]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1888</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[17]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1889</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[18]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1890</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[19]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1891</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[20]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.HebbianCPCARule">
        <learningRate>0.005</learningRate>
        <m>3.3333</m>
        <theta>1.0</theta>
        <lambda>1.0</lambda>
      </learningRule>
      <id>Synapse_1892</id>
      <strength>0.0</strength>
      <psr>0.0</psr>
      <increment>0.01</increment>
      <upperBound>0.1</upperBound>
      <lowerBound>-0.1</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>false</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source"/>
      <target>
        <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
          <inputType>WEIGHTED</inputType>
          <increment>1.0</increment>
          <threshold>0.0</threshold>
          <ceiling>1.0</ceiling>
          <floor>0.0</floor>
          <bias>0.0</bias>
        </updateRule>
        <id>Neuron_777</id>
        <label></label>
        <activation>1.0</activation>
        <spike>false</spike>
        <buffer>1.0</buffer>
        <spkBuffer>false</spkBuffer>
        <inputValue>0.0</inputValue>
        <parent reference="../../../.."/>
        <x>893.9493989133159</x>
        <y>-185.04149451980717</y>
        <z>0.0</z>
        <clamped>false</clamped>
        <polarity>BOTH</polarity>
        <targetValue>0.0</targetValue>
        <parentGroup class="org.simbrain.network.groups.NeuronGroup">
          <parentNetwork reference="../../../../.."/>
          <id>Group_46</id>
          <label>Stimulus input</label>
          <stateInfo></stateInfo>
          <markedForDeletion>false</markedForDeletion>
          <updateRule>Linear</updateRule>
          <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
          <neuronList>
            <org.simbrain.network.core.Neuron reference="../../.."/>
            <org.simbrain.network.core.Neuron>
              <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                <inputType>WEIGHTED</inputType>
                <increment>1.0</increment>
                <threshold>0.0</threshold>
                <ceiling>1.0</ceiling>
                <floor>0.0</floor>
                <bias>0.0</bias>
              </updateRule>
              <id>Neuron_778</id>
              <label></label>
              <activation>0.0</activation>
              <spike>false</spike>
              <buffer>0.0</buffer>
              <spkBuffer>false</spkBuffer>
              <inputValue>0.0</inputValue>
              <parent reference="../../../../../../.."/>
              <x>935.2073637514892</x>
              <y>-185.04149451980723</y>
              <z>0.0</z>
              <clamped>false</clamped>
              <polarity>BOTH</polarity>
              <targetValue>0.0</targetValue>
              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../.."/>
              <updatePriority>0</updatePriority>
              <auxValue>0.0</auxValue>
            </org.simbrain.network.core.Neuron>
            <org.simbrain.network.core.Neuron>
              <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                <inputType>WEIGHTED</inputType>
                <increment>1.0</increment>
                <threshold>0.0</threshold>
                <ceiling>1.0</ceiling>
                <floor>0.0</floor>
                <bias>0.0</bias>
              </updateRule>
              <id>Neuron_779</id>
              <label></label>
              <activation>1.0</activation>
              <spike>false</spike>
              <buffer>1.0</buffer>
              <spkBuffer>false</spkBuffer>
              <inputValue>0.0</inputValue>
              <parent reference="../../../../../../.."/>
              <x>973.9493989133147</x>
              <y>-185.04149451980717</y>
              <z>0.0</z>
              <clamped>false</clamped>
              <polarity>BOTH</polarity>
              <targetValue>0.0</targetValue>
              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../.."/>
              <updatePriority>0</updatePriority>
              <auxValue>0.0</auxValue>
            </org.simbrain.network.core.Neuron>
            <org.simbrain.network.core.Neuron>
              <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                <inputType>WEIGHTED</inputType>
                <increment>1.0</increment>
                <threshold>0.0</threshold>
                <ceiling>1.0</ceiling>
                <floor>0.0</floor>
                <bias>0.0</bias>
              </updateRule>
              <id>Neuron_780</id>
              <label></label>
              <activation>0.0</activation>
              <spike>false</spike>
              <buffer>0.0</buffer>
              <spkBuffer>false</spkBuffer>
              <inputValue>0.0</inputValue>
              <parent reference="../../../../../../.."/>
              <x>1013.9493989133147</x>
              <y>-185.04149451980717</y>
              <z>0.0</z>
              <clamped>false</clamped>
              <polarity>BOTH</polarity>
              <targetValue>0.0</targetValue>
              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../.."/>
              <updatePriority>0</updatePriority>
              <auxValue>0.0</auxValue>
            </org.simbrain.network.core.Neuron>
            <org.simbrain.network.core.Neuron>
              <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                <inputType>WEIGHTED</inputType>
                <increment>1.0</increment>
                <threshold>0.0</threshold>
                <ceiling>1.0</ceiling>
                <floor>0.0</floor>
                <bias>0.0</bias>
              </updateRule>
              <id>Neuron_781</id>
              <label></label>
              <activation>1.0</activation>
              <spike>false</spike>
              <buffer>1.0</buffer>
              <spkBuffer>false</spkBuffer>
              <inputValue>0.0</inputValue>
              <parent reference="../../../../../../.."/>
              <x>1053.949398913316</x>
              <y>-185.04149451980717</y>
              <z>0.0</z>
              <clamped>false</clamped>
              <polarity>BOTH</polarity>
              <targetValue>0.0</targetValue>
              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../.."/>
              <updatePriority>0</updatePriority>
              <auxValue>0.0</auxValue>
            </org.simbrain.network.core.Neuron>
            <org.simbrain.network.core.Neuron>
              <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                <inputType>WEIGHTED</inputType>
                <increment>1.0</increment>
                <threshold>0.0</threshold>
                <ceiling>1.0</ceiling>
                <floor>0.0</floor>
                <bias>0.0</bias>
              </updateRule>
              <id>Neuron_782</id>
              <label></label>
              <activation>0.0</activation>
              <spike>false</spike>
              <buffer>0.0</buffer>
              <spkBuffer>false</spkBuffer>
              <inputValue>0.0</inputValue>
              <parent reference="../../../../../../.."/>
              <x>1093.9493989133152</x>
              <y>-185.04149451980717</y>
              <z>0.0</z>
              <clamped>false</clamped>
              <polarity>BOTH</polarity>
              <targetValue>0.0</targetValue>
              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../.."/>
              <updatePriority>0</updatePriority>
              <auxValue>0.0</auxValue>
            </org.simbrain.network.core.Neuron>
            <org.simbrain.network.core.Neuron>
              <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                <inputType>WEIGHTED</inputType>
                <increment>1.0</increment>
                <threshold>0.0</threshold>
                <ceiling>1.0</ceiling>
                <floor>0.0</floor>
                <bias>0.0</bias>
              </updateRule>
              <id>Neuron_783</id>
              <label></label>
              <activation>1.0</activation>
              <spike>false</spike>
              <buffer>1.0</buffer>
              <spkBuffer>false</spkBuffer>
              <inputValue>0.0</inputValue>
              <parent reference="../../../../../../.."/>
              <x>1133.9493989133152</x>
              <y>-185.04149451980717</y>
              <z>0.0</z>
              <clamped>false</clamped>
              <polarity>BOTH</polarity>
              <targetValue>0.0</targetValue>
              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../.."/>
              <updatePriority>0</updatePriority>
              <auxValue>0.0</auxValue>
            </org.simbrain.network.core.Neuron>
            <org.simbrain.network.core.Neuron>
              <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                <inputType>WEIGHTED</inputType>
                <increment>1.0</increment>
                <threshold>0.0</threshold>
                <ceiling>1.0</ceiling>
                <floor>0.0</floor>
                <bias>0.0</bias>
              </updateRule>
              <id>Neuron_784</id>
              <label></label>
              <activation>0.0</activation>
              <spike>false</spike>
              <buffer>0.0</buffer>
              <spkBuffer>false</spkBuffer>
              <inputValue>0.0</inputValue>
              <parent reference="../../../../../../.."/>
              <x>1173.9493989133143</x>
              <y>-185.04149451980717</y>
              <z>0.0</z>
              <clamped>false</clamped>
              <polarity>BOTH</polarity>
              <targetValue>0.0</targetValue>
              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../.."/>
              <updatePriority>0</updatePriority>
              <auxValue>0.0</auxValue>
            </org.simbrain.network.core.Neuron>
            <org.simbrain.network.core.Neuron>
              <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                <inputType>WEIGHTED</inputType>
                <increment>1.0</increment>
                <threshold>0.0</threshold>
                <ceiling>1.0</ceiling>
                <floor>0.0</floor>
                <bias>0.0</bias>
              </updateRule>
              <id>Neuron_785</id>
              <label></label>
              <activation>1.0</activation>
              <spike>false</spike>
              <buffer>1.0</buffer>
              <spkBuffer>false</spkBuffer>
              <inputValue>0.0</inputValue>
              <parent reference="../../../../../../.."/>
              <x>1212.9319418495375</x>
              <y>-185.04149451980717</y>
              <z>0.0</z>
              <clamped>false</clamped>
              <polarity>BOTH</polarity>
              <targetValue>0.0</targetValue>
              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../.."/>
              <updatePriority>0</updatePriority>
              <auxValue>0.0</auxValue>
            </org.simbrain.network.core.Neuron>
            <org.simbrain.network.core.Neuron>
              <updateRule class="org.simbrain.network.neuron_update_rules.BinaryRule">
                <inputType>WEIGHTED</inputType>
                <increment>1.0</increment>
                <threshold>0.0</threshold>
                <ceiling>1.0</ceiling>
                <floor>0.0</floor>
                <bias>0.0</bias>
              </updateRule>
              <id>Neuron_786</id>
              <label></label>
              <activation>1.0</activation>
              <spike>false</spike>
              <buffer>1.0</buffer>
              <spkBuffer>false</spkBuffer>
              <inputValue>0.0</inputValue>
              <parent reference="../../../../../../.."/>
              <x>1252.5040121025033</x>
              <y>-185.04149451980717</y>
              <z>0.0</z>
              <clamped>false</clamped>
              <polarity>BOTH</polarity>
              <targetValue>0.0</targetValue>
              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../.."/>
              <updatePriority>0</updatePriority>
              <auxValue>0.0</auxValue>
            </org.simbrain.network.core.Neuron>
          </neuronList>
          <layout class="org.simbrain.network.layouts.LineLayout">
            <orientation>HORIZONTAL</orientation>
            <spacing>50.0</spacing>
            <initialX>0.0</initialX>
            <initialY>0.0</initialY>
          </layout>
          <incomingSgs/>
          <outgoingSgs/>
          <gridThreshold>10</gridThreshold>
          <betweenNeuronInterval>50</betweenNeuronInterval>
          <recordAsSpikes>false</recordAsSpikes>
          <recording>false</recording>
          <inputMode>false</inputMode>
          <inputIndex>0</inputIndex>
          <writeCounter>0</writeCounter>
          <subsamplingIndices>
            <int>3</int>
            <int>7</int>
            <int>4</int>
            <int>9</int>
            <int>6</int>
            <int>1</int>
            <int>5</int>
            <int>2</int>
            <int>0</int>
            <int>8</int>
          </subsamplingIndices>
          <fileNum>0</fileNum>
        </parentGroup>
        <updatePriority>0</updatePriority>
        <auxValue>0.0</auxValue>
      </target>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1893</id>
      <strength>1.0</strength>
      <psr>4.008804303495695</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
      <target reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[2]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1894</id>
      <strength>1.0</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
      <target reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[3]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1895</id>
      <strength>1.0</strength>
      <psr>0.568905962193082</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
      <target reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[4]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1896</id>
      <strength>1.0</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
      <target reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[5]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1897</id>
      <strength>1.0</strength>
      <psr>0.08630572517505097</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
      <target reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[6]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1898</id>
      <strength>1.0</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
      <target reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[7]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1899</id>
      <strength>1.0</strength>
      <psr>3.7032167143292534</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
      <target reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[8]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1900</id>
      <strength>1.0</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
      <target reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[9]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1901</id>
      <strength>1.0</strength>
      <psr>1.4162485965480864</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
      <target reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[10]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1902</id>
      <strength>1.0</strength>
      <psr>1.5968025385038702</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1903</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[2]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1904</id>
      <strength>0.2</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[3]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1905</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[4]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1906</id>
      <strength>0.2</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[5]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1907</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[6]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1908</id>
      <strength>0.2</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[7]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1909</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[8]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1910</id>
      <strength>0.2</strength>
      <psr>0.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[9]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1911</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[10]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1912</id>
      <strength>0.2</strength>
      <psr>0.2</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[21]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1913</id>
      <strength>0.002</strength>
      <psr>1.0432901663979564</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[22]"/>
      <target reference="../../org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1914</id>
      <strength>0.2</strength>
      <psr>-4.0</psr>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <enabled>true</enabled>
      <frozen>true</frozen>
      <dlyPtr>0</dlyPtr>
      <dlyVal>0.0</dlyVal>
      <isTemplate>false</isTemplate>
    </org.simbrain.network.core.Synapse>
  </synapseList>
  <groupList>
    <org.simbrain.network.groups.NeuronGroup reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup"/>
    <org.simbrain.network.subnetworks.BackpropNetwork reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup"/>
    <org.simbrain.network.groups.NeuronGroup reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup"/>
    <org.simbrain.network.subnetworks.BackpropNetwork reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup"/>
    <org.simbrain.network.groups.NeuronGroup reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup"/>
  </groupList>
  <textList/>
  <updateManager>
    <actionList>
      <org.simbrain.network.update__actions.BufferedUpdate>
        <network reference="../../../.."/>
      </org.simbrain.network.update__actions.BufferedUpdate>
      <org.simbrain.network.update__actions.UpdateGroup>
        <group class="org.simbrain.network.groups.NeuronGroup" reference="../../../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup"/>
      </org.simbrain.network.update__actions.UpdateGroup>
      <org.simbrain.network.update__actions.UpdateGroup>
        <group class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup"/>
      </org.simbrain.network.update__actions.UpdateGroup>
      <org.simbrain.network.update__actions.UpdateGroup>
        <group class="org.simbrain.network.groups.NeuronGroup" reference="../../../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup"/>
      </org.simbrain.network.update__actions.UpdateGroup>
      <org.simbrain.network.update__actions.UpdateGroup>
        <group class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup"/>
      </org.simbrain.network.update__actions.UpdateGroup>
      <org.simbrain.network.update__actions.UpdateGroup>
        <group class="org.simbrain.network.groups.NeuronGroup" reference="../../../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup"/>
      </org.simbrain.network.update__actions.UpdateGroup>
    </actionList>
    <network reference="../.."/>
  </updateManager>
  <time>26.600000000000108</time>
  <timeStep>0.1</timeStep>
  <timeType>DISCRETE</timeType>
  <prioritySortedNeuronList>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[11]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[12]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[13]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[14]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[15]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[16]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[17]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[18]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[19]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[20]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[11]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[22]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[6]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[7]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[8]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[9]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[63]/target/parentGroup/neuronList/org.simbrain.network.core.Neuron[10]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[11]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[12]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[13]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[14]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[15]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[16]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[17]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[18]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[19]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[20]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[21]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[22]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse/target/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[4]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[5]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[6]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[7]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[8]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[9]"/>
    <org.simbrain.network.core.Neuron reference="../../synapseList/org.simbrain.network.core.Synapse[43]/source/parentGroup/parentGroup/neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup[2]/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/neuronList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.core.Neuron[10]"/>
  </prioritySortedNeuronList>
  <priorityComparator>
    <outer-class reference="../.."/>
  </priorityComparator>
  <neuronIdGenerator>
    <rootName>Neuron</rootName>
    <index>1060</index>
  </neuronIdGenerator>
  <synapseIdGenerator>
    <rootName>Synapse</rootName>
    <index>18560</index>
  </synapseIdGenerator>
  <groupIdGenerator>
    <rootName>Group</rootName>
    <index>60</index>
  </groupIdGenerator>
  <fireUpdates>true</fireUpdates>
  <name>BayesianObserverv4(backprop).xml</name>
</org.simbrain.network.core.Network>