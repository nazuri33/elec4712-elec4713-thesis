clear
clc
rng('default');


directory = 'D:\checkout\elec4712-elec4713-thesis\final model files\version 1 backprop\data\abridging2014\nodirection\compression data';
X = csvread([directory filesep 'Abridging2014CompressionInputs.csv']); % input set
Y = csvread([directory filesep 'Abridging2014CompressionTargets.csv']); % target set
Xmean = csvread([directory filesep 'Abridging2014CompressionInputsMeans.csv']); % input set (means)
Ymean = csvread([directory filesep 'Abridging2014CompressionTargetsMeans.csv']); % target set (means)

optimVars = [
%     optimizableVariable('Depth', [0 3], 'Type', 'integer') % for test 5
%     optimizableVariable('Width', [1 10], 'Type', 'integer') % for test 5
    
    optimizableVariable('InitialLearnRate', [1e-3 0.5], 'Transform','log') % for test 6
    optimizableVariable('Momentum', [0.6 0.95])]; % for test 6
    % note: poslin = relu
    
optimResultTest6 = ffObjFcn6(X, Y, 0); 
BayesObjectTest6 = bayesopt(optimResultTest6, optimVars, ...
    'MaxObj', 1000, ...
    'IsObjectiveDeterministic', false, ...
    'PlotFcn', {@plotAcquisitionFunction, @plotConstraintModels, @plotObjectiveEvaluationTimeModel, @plotObjectiveModel, @plotObjective, @plotObjectiveEvaluationTime, @plotMinObjective, @plotElapsedTime}, ...
    'UseParallel', false); 

%  x = bestPoint(BayesObjectTest4, 'Criterion', 'min-observed'); 


function optimResultTest6 = ffObjFcn6(X, Y, iter6)
optimResultTest6 = @valErrorFun6;
    function [valErrorB, cons6, fileName6] = valErrorFun6(optVars6)
        iter6 = iter6 + 1; 
        net6 = fitnet(3, 'traingdm'); 
        net6.layers{1}.transferFcn = 'poslin'; 
        net6.performFcn = 'mse'; % for test 3b
       
        net6.trainParam.lr = optVars.InitialLearnRate; % for tests 1, 2 & 3
        net6.trainparam.mc = optVars.Momentum; 
        [trainedNet6, tr6] = train(net6, X', Y'); % NOTE: by default, feedforwardnets partition data 0.7:0.15:0.15 according to dividerand function

        valErrorB = trB.best_vperf; 
        

        fileName = num2str(valError6) + "_6_iter" + iter6 + ".mat";
        dirFile6 = 'D:\checkout\elec4712-elec4713-thesis\final model files\version 1 backprop\matlab\backpropOptim\test6\trainedNets\' + fileName; 
        save(dirFile6, 'trainedNet6', 'valError6', 'net6'); 
        cons6 = []; 

    end
end





